# Generated by Django 5.2.1 on 2025-06-04 17:02

import django.core.validators
import django.db.models.deletion
import django_quill.fields
import re
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('essays', '0014_entryelement_sales_test_request_and_more'),
        ('home', '0010_deincorporaterequest_rejected'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ArtRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('touched', models.BooleanField(default=False)),
                ('number', models.CharField(blank=True, max_length=9, null=True, validators=[django.core.validators.RegexValidator('^[0-9]{2}[-][0-9]{6}$')])),
                ('date', models.DateField(blank=True, null=True)),
                ('production_order', models.CharField(blank=True, max_length=7, null=True)),
                ('company', models.CharField(blank=True, choices=[('mcl', 'Morrocel'), ('crx', 'Curex')], max_length=3, null=True)),
                ('origin', models.CharField(choices=[('new', 'Nueva Estructura'), ('upd', 'Cambio de Estructura'), ('int', 'Prueba Interna'), ('mat', 'Evaluación de Materia Prima / Proveedor')], max_length=3, null=True)),
                ('check_test_client', models.BooleanField(default=False)),
                ('test_client', models.CharField(blank=True, max_length=100, null=True)),
                ('art_number', models.CharField(blank=True, max_length=8, null=True)),
                ('art_date', models.DateField(blank=True, null=True)),
                ('product', models.CharField(max_length=100, null=True)),
                ('design', models.CharField(blank=True, max_length=100, null=True)),
                ('print_selector', models.BooleanField(default=False)),
                ('lamination_process', django_quill.fields.QuillField(null=True)),
                ('surface_selector', models.BooleanField(default=False)),
                ('reverse_selector', models.BooleanField(default=True)),
                ('sindex', models.IntegerField(default=-2)),
                ('sustrate_width', models.IntegerField(blank=True, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message=None)])),
                ('print_width', models.CharField(blank=True, max_length=30, null=True)),
                ('print_width_unit', models.CharField(blank=True, choices=[('mm', 'mm'), ('cm', 'cm'), ('in', 'in')], max_length=3, null=True)),
                ('colors', models.CharField(blank=True, max_length=200, null=True)),
                ('dist_boder_cell_material', models.CharField(blank=True, max_length=30, null=True)),
                ('repetition', models.CharField(blank=True, max_length=30, null=True)),
                ('repetition_unit', models.CharField(blank=True, choices=[('mm', 'mm'), ('cm', 'cm'), ('in', 'in')], max_length=3, null=True)),
                ('width_photo', models.IntegerField(blank=True, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message=None)])),
                ('lenght_photo', models.IntegerField(blank=True, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message=None)])),
                ('unit_photo', models.CharField(blank=True, choices=[('mm', 'mm'), ('cm', 'cm'), ('in', 'in')], max_length=3, null=True)),
                ('check_bobbin', models.BooleanField(default=False)),
                ('width_bobbin', models.CharField(blank=True, max_length=30, null=True)),
                ('width_bobbin_unit', models.CharField(blank=True, choices=[('mm', 'mm'), ('cm', 'cm'), ('in', 'in')], max_length=3, null=True)),
                ('develop', models.CharField(blank=True, max_length=30, null=True)),
                ('develop_unit', models.CharField(blank=True, choices=[('mm', 'mm'), ('cm', 'cm'), ('in', 'in')], max_length=3, null=True)),
                ('core_dia_bobbin', models.CharField(blank=True, choices=[('3', '3"'), ('6', '6"')], max_length=1, null=True)),
                ('exterior_dia_bobbin', models.CharField(blank=True, max_length=30, null=True)),
                ('exterior_dia_bobbin_unit', models.CharField(blank=True, choices=[('kg', 'kg'), ('mm', 'mm'), ('cm', 'cm'), ('m', 'm')], max_length=3, null=True)),
                ('winding', models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8')], max_length=1, null=True)),
                ('photocell_side', models.CharField(blank=True, choices=[('l', 'Fotocelda lado izquierdo'), ('r', 'Fotocelda lado derecho'), ('b', 'Fotocelda ambos lados')], max_length=1, null=True)),
                ('winding_description', models.CharField(blank=True, max_length=100, null=True)),
                ('check_ream', models.BooleanField(default=False)),
                ('width_ream', models.CharField(blank=True, max_length=30, null=True)),
                ('lenght_ream', models.CharField(blank=True, max_length=30, null=True)),
                ('weight_ream', models.CharField(blank=True, max_length=30, null=True)),
                ('quantity', models.IntegerField(null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message=None)])),
                ('unit', models.CharField(choices=[('kg', 'kg'), ('m', 'm'), ('m²', 'm²')], max_length=3, null=True)),
                ('tolerance', models.IntegerField(default=10, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('observation', django_quill.fields.QuillField(blank=True, null=True)),
                ('packaging', models.CharField(blank=True, max_length=100, null=True)),
                ('tie_color', models.CharField(blank=True, max_length=100, null=True)),
                ('elaborator', models.CharField(max_length=100, null=True)),
                ('applicant', models.CharField(blank=True, max_length=100, null=True)),
                ('reviewer', models.CharField(blank=True, max_length=100, null=True)),
                ('pre_print', models.BooleanField(default=False)),
                ('colorimetry', models.BooleanField(default=False)),
                ('plan_crx', models.BooleanField(default=False)),
                ('plan_mcl', models.BooleanField(default=False)),
                ('logistics', models.BooleanField(default=False)),
                ('quality', models.BooleanField(default=False)),
                ('archived', models.BooleanField(default=False)),
                ('archived_time', models.DateTimeField(blank=True, null=True)),
                ('closed', models.BooleanField(default=False)),
                ('closed_time', models.DateTimeField(blank=True, null=True)),
                ('deleted', models.BooleanField(blank=True, default=False, null=True)),
                ('deleted_by', models.CharField(blank=True, max_length=30, null=True)),
                ('deleted_time', models.DateTimeField(blank=True, null=True)),
                ('deleted_reason', models.TextField(blank=True, default='', null=True)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='home.client', verbose_name='Clientes')),
                ('entry_element', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='art_entry_element', to='essays.entryelement')),
                ('printer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='essays.printer')),
            ],
            options={
                'verbose_name': 'Solicitud de Arte',
                'verbose_name_plural': 'Solicitudes de Arte',
                'permissions': [('view_working_artrequest', 'Puede firmar una solicitud de arte cómo revisada'), ('sign_artrequest', 'Puede firmar una solicitud de arte cómo revisada'), ('view_archived_artrequest', 'Puede ver el archivo de solicitudes de arte'), ('archive_artrequest', 'Puede archivar una solicitud de arte'), ('unarchive_artrequest', 'Puede desarchivar una solicitud de arte'), ('view_deleted_artrequest', 'Puede ver la papelera de solicitudes de arte'), ('delete_true_artrequest', 'Puede eliminar permanentemenete una solicitud de arte'), ('restore_artrequest', 'Puede restaurar una solicitud de arte de la papelera'), ('close_artrequest', 'Puede Cerrar Un expediente de Arte y enviar a IDAT'), ('open_artrequest', 'Puede Abrir Un expediente de Arte y enviar a IDAT')],
            },
        ),
        migrations.CreateModel(
            name='HistoricalArtRequest',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('touched', models.BooleanField(default=False)),
                ('number', models.CharField(blank=True, max_length=9, null=True, validators=[django.core.validators.RegexValidator('^[0-9]{2}[-][0-9]{6}$')])),
                ('date', models.DateField(blank=True, null=True)),
                ('production_order', models.CharField(blank=True, max_length=7, null=True)),
                ('company', models.CharField(blank=True, choices=[('mcl', 'Morrocel'), ('crx', 'Curex')], max_length=3, null=True)),
                ('origin', models.CharField(choices=[('new', 'Nueva Estructura'), ('upd', 'Cambio de Estructura'), ('int', 'Prueba Interna'), ('mat', 'Evaluación de Materia Prima / Proveedor')], max_length=3, null=True)),
                ('check_test_client', models.BooleanField(default=False)),
                ('test_client', models.CharField(blank=True, max_length=100, null=True)),
                ('art_number', models.CharField(blank=True, max_length=8, null=True)),
                ('art_date', models.DateField(blank=True, null=True)),
                ('product', models.CharField(max_length=100, null=True)),
                ('design', models.CharField(blank=True, max_length=100, null=True)),
                ('print_selector', models.BooleanField(default=False)),
                ('lamination_process', django_quill.fields.QuillField(null=True)),
                ('surface_selector', models.BooleanField(default=False)),
                ('reverse_selector', models.BooleanField(default=True)),
                ('sindex', models.IntegerField(default=-2)),
                ('sustrate_width', models.IntegerField(blank=True, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message=None)])),
                ('print_width', models.CharField(blank=True, max_length=30, null=True)),
                ('print_width_unit', models.CharField(blank=True, choices=[('mm', 'mm'), ('cm', 'cm'), ('in', 'in')], max_length=3, null=True)),
                ('colors', models.CharField(blank=True, max_length=200, null=True)),
                ('dist_boder_cell_material', models.CharField(blank=True, max_length=30, null=True)),
                ('repetition', models.CharField(blank=True, max_length=30, null=True)),
                ('repetition_unit', models.CharField(blank=True, choices=[('mm', 'mm'), ('cm', 'cm'), ('in', 'in')], max_length=3, null=True)),
                ('width_photo', models.IntegerField(blank=True, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message=None)])),
                ('lenght_photo', models.IntegerField(blank=True, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message=None)])),
                ('unit_photo', models.CharField(blank=True, choices=[('mm', 'mm'), ('cm', 'cm'), ('in', 'in')], max_length=3, null=True)),
                ('check_bobbin', models.BooleanField(default=False)),
                ('width_bobbin', models.CharField(blank=True, max_length=30, null=True)),
                ('width_bobbin_unit', models.CharField(blank=True, choices=[('mm', 'mm'), ('cm', 'cm'), ('in', 'in')], max_length=3, null=True)),
                ('develop', models.CharField(blank=True, max_length=30, null=True)),
                ('develop_unit', models.CharField(blank=True, choices=[('mm', 'mm'), ('cm', 'cm'), ('in', 'in')], max_length=3, null=True)),
                ('core_dia_bobbin', models.CharField(blank=True, choices=[('3', '3"'), ('6', '6"')], max_length=1, null=True)),
                ('exterior_dia_bobbin', models.CharField(blank=True, max_length=30, null=True)),
                ('exterior_dia_bobbin_unit', models.CharField(blank=True, choices=[('kg', 'kg'), ('mm', 'mm'), ('cm', 'cm'), ('m', 'm')], max_length=3, null=True)),
                ('winding', models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8')], max_length=1, null=True)),
                ('photocell_side', models.CharField(blank=True, choices=[('l', 'Fotocelda lado izquierdo'), ('r', 'Fotocelda lado derecho'), ('b', 'Fotocelda ambos lados')], max_length=1, null=True)),
                ('winding_description', models.CharField(blank=True, max_length=100, null=True)),
                ('check_ream', models.BooleanField(default=False)),
                ('width_ream', models.CharField(blank=True, max_length=30, null=True)),
                ('lenght_ream', models.CharField(blank=True, max_length=30, null=True)),
                ('weight_ream', models.CharField(blank=True, max_length=30, null=True)),
                ('quantity', models.IntegerField(null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message=None)])),
                ('unit', models.CharField(choices=[('kg', 'kg'), ('m', 'm'), ('m²', 'm²')], max_length=3, null=True)),
                ('tolerance', models.IntegerField(default=10, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('observation', django_quill.fields.QuillField(blank=True, null=True)),
                ('packaging', models.CharField(blank=True, max_length=100, null=True)),
                ('tie_color', models.CharField(blank=True, max_length=100, null=True)),
                ('elaborator', models.CharField(max_length=100, null=True)),
                ('applicant', models.CharField(blank=True, max_length=100, null=True)),
                ('reviewer', models.CharField(blank=True, max_length=100, null=True)),
                ('pre_print', models.BooleanField(default=False)),
                ('colorimetry', models.BooleanField(default=False)),
                ('plan_crx', models.BooleanField(default=False)),
                ('plan_mcl', models.BooleanField(default=False)),
                ('logistics', models.BooleanField(default=False)),
                ('quality', models.BooleanField(default=False)),
                ('archived', models.BooleanField(default=False)),
                ('archived_time', models.DateTimeField(blank=True, null=True)),
                ('closed', models.BooleanField(default=False)),
                ('closed_time', models.DateTimeField(blank=True, null=True)),
                ('deleted', models.BooleanField(blank=True, default=False, null=True)),
                ('deleted_by', models.CharField(blank=True, max_length=30, null=True)),
                ('deleted_time', models.DateTimeField(blank=True, null=True)),
                ('deleted_reason', models.TextField(blank=True, default='', null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('client', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='home.client', verbose_name='Clientes')),
                ('entry_element', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='essays.entryelement')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('printer', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='essays.printer')),
            ],
            options={
                'verbose_name': 'historical Solicitud de Arte',
                'verbose_name_plural': 'historical Solicitudes de Arte',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
