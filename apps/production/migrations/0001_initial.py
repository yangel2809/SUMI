# Generated by Django 4.2.13 on 2024-06-05 18:34

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_quill.fields
import re
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sales', '0001_initial'),
        ('essays', '0001_initial'),
        ('home', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Bobbin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('turn', models.CharField(choices=[('I', 'I'), ('II', 'II'), ('III', 'III')], max_length=3, null=True)),
                ('date', models.DateField(null=True)),
                ('production_operator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='production_operator_pr_bb', to='essays.productionoperator')),
                ('quality_analist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='quality_analist_pr_bb', to='essays.qualityanalyst')),
            ],
            options={
                'verbose_name': 'ID único para bobina OP',
                'verbose_name_plural': 'ID único para bobinas OP',
            },
        ),
        migrations.CreateModel(
            name='LaminatorBoot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origin', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('date_time', models.DateTimeField(null=True)),
                ('turn', models.CharField(choices=[('I', 'I'), ('II', 'II'), ('III', 'III')], max_length=3, null=True)),
                ('machine_speed', models.FloatField(null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('check_crown_treatment', models.BooleanField(default=False)),
                ('step', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4')], max_length=1, null=True)),
                ('st_1', models.CharField(max_length=25, null=True)),
                ('st_2', models.CharField(max_length=25, null=True)),
                ('st_3', models.CharField(blank=True, max_length=25, null=True)),
                ('st_4', models.CharField(blank=True, max_length=25, null=True)),
                ('batch', models.CharField(blank=True, max_length=20, null=True)),
                ('formula', models.CharField(blank=True, max_length=7, null=True)),
                ('time', models.CharField(blank=True, max_length=100, null=True)),
                ('temp', models.IntegerField(blank=True, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message=None)])),
                ('observation', django_quill.fields.QuillField(blank=True, null=True)),
                ('adhesive', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='adhesive_pr', to='home.material')),
                ('laminator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='laminator_pr', to='essays.laminator')),
                ('production_operator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='production_operator_pr_lm', to='essays.productionoperator')),
            ],
            options={
                'verbose_name': 'Arranque de Laminadora',
                'verbose_name_plural': 'Arranques de Laminadora',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(blank=True, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message=None), django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(999999999)])),
                ('date', models.DateField(null=True)),
                ('deleted', models.BooleanField(blank=True, default=False, null=True)),
                ('deleted_by', models.CharField(blank=True, max_length=30, null=True)),
                ('deleted_time', models.DateTimeField(blank=True, null=True)),
                ('deleted_reason', models.TextField(blank=True, default='', null=True)),
                ('sale_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='production_order', to='sales.saleorder')),
            ],
            options={
                'verbose_name': 'Órden de Producción',
                'verbose_name_plural': 'Órdenes de Producción',
            },
        ),
        migrations.CreateModel(
            name='PrinterBoot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origin', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('date_time', models.DateTimeField(null=True)),
                ('turn', models.CharField(choices=[('I', 'I'), ('II', 'II'), ('III', 'III')], max_length=3, null=True)),
                ('machine_speed', models.FloatField(null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('check_crown_treatment', models.BooleanField(default=False)),
                ('s_index', models.IntegerField(default=0)),
                ('provider', models.CharField(blank=True, max_length=100, null=True)),
                ('sustrate_width', models.IntegerField(blank=True, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message=None)])),
                ('crown_treatment_side', models.CharField(blank=True, choices=[('e', 'Externa'), ('i', 'Interna')], max_length=1, null=True)),
                ('surface_tension', models.CharField(blank=True, choices=[('36', '36'), ('38', '38'), ('40', '40'), ('42', '42'), ('44', '44'), ('46', '46')], max_length=2, null=True)),
                ('sta_01', models.CharField(default='-', max_length=20)),
                ('sta_02', models.CharField(default='-', max_length=20)),
                ('sta_03', models.CharField(default='-', max_length=20)),
                ('sta_04', models.CharField(default='-', max_length=20)),
                ('sta_05', models.CharField(default='-', max_length=20)),
                ('sta_06', models.CharField(default='-', max_length=20)),
                ('sta_07', models.CharField(default='-', max_length=20)),
                ('sta_08', models.CharField(default='-', max_length=20)),
                ('sta_09', models.CharField(default='-', max_length=20)),
                ('sta_10', models.CharField(default='-', max_length=20)),
                ('standar', models.CharField(choices=[('Si', 'Si'), ('No', 'No'), ('NA', 'No Aplica')], default='NA', max_length=2)),
                ('art', models.CharField(choices=[('Si', 'Si'), ('No', 'No'), ('NA', 'No Aplica')], default='NA', max_length=2)),
                ('pre_print', models.CharField(choices=[('Si', 'Si'), ('No', 'No'), ('NA', 'No Aplica')], default='NA', max_length=2)),
                ('develop_folder', models.CharField(choices=[('Si', 'Si'), ('No', 'No'), ('NA', 'No Aplica')], default='NA', max_length=2)),
                ('register', models.CharField(choices=[('na', 'No aplica'), ('ac', 'Aceptado'), ('de', 'Deficiente'), ('ad', 'Aceptado con desviación')], max_length=2, null=True)),
                ('text', models.CharField(choices=[('na', 'No aplica'), ('ac', 'Aceptado'), ('de', 'Deficiente'), ('ad', 'Aceptado con desviación')], max_length=2, null=True)),
                ('dimensions', models.CharField(choices=[('na', 'No aplica'), ('ac', 'Aceptado'), ('de', 'Deficiente'), ('ad', 'Aceptado con desviación')], max_length=2, null=True)),
                ('cutting_guide', models.CharField(choices=[('na', 'No aplica'), ('ac', 'Aceptado'), ('de', 'Deficiente'), ('ad', 'Aceptado con desviación')], max_length=2, null=True)),
                ('photocell', models.CharField(choices=[('na', 'No aplica'), ('ac', 'Aceptado'), ('de', 'Deficiente'), ('ad', 'Aceptado con desviación')], max_length=2, null=True)),
                ('barcode', models.CharField(choices=[('na', 'No aplica'), ('ac', 'Aceptado'), ('de', 'Deficiente'), ('ad', 'Aceptado con desviación')], max_length=2, null=True)),
                ('develop', models.CharField(blank=True, max_length=30, null=True)),
                ('develop_unit', models.CharField(blank=True, choices=[('mm', 'mm'), ('cm', 'cm'), ('in', 'in')], max_length=3, null=True)),
                ('develop_result', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('cut_width_result', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('design', models.CharField(blank=True, max_length=30, null=True)),
                ('machine_winding', models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8')], max_length=1, null=True)),
                ('winding_description', models.CharField(blank=True, max_length=100, null=True)),
                ('r_left', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('r_right', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('r_center', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('r_average', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('color_standar', models.CharField(choices=[('No Aplica', 'No aplica'), ('Claro', 'Claro'), ('Estándar', 'Estándar'), ('Oscuro', 'Oscuro')], max_length=10, null=True)),
                ('anchorage', models.CharField(choices=[('ac', 'Aceptado'), ('de', 'Deficiente')], max_length=2, null=True)),
                ('rub', models.CharField(choices=[('ac', 'Aceptado'), ('de', 'Deficiente')], max_length=2, null=True)),
                ('ther_resistance', models.CharField(choices=[('na', 'No aplica'), ('ac', 'Aceptado'), ('de', 'Deficiente')], max_length=2, null=True)),
                ('anchorage_resistance', models.CharField(choices=[('na', 'No aplica'), ('ac', 'Aceptado'), ('de', 'Deficiente')], max_length=2, null=True)),
                ('cut_diagram', models.BooleanField(default=False)),
                ('observation', django_quill.fields.QuillField(blank=True, null=True)),
                ('printer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='printer_pr', to='essays.printer')),
                ('production_operator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='production_operator_pr', to='essays.productionoperator')),
                ('production_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='production.order')),
                ('quality_analist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='quality_analist_pr', to='essays.qualityanalyst')),
            ],
            options={
                'verbose_name': 'Arranque de impresora',
                'verbose_name_plural': 'Arranques de impresoras',
            },
        ),
        migrations.CreateModel(
            name='TestFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('prt', 'prt'), ('lam', 'lam')], max_length=3, null=True)),
                ('turn', models.CharField(choices=[('I', 'I'), ('II', 'II'), ('III', 'III')], max_length=3, null=True)),
                ('date', models.DateField(null=True)),
                ('observation', django_quill.fields.QuillField(blank=True, null=True)),
                ('supervisor', models.CharField(blank=True, max_length=30, null=True)),
                ('boss', models.CharField(blank=True, max_length=30, null=True)),
                ('idat', models.CharField(blank=True, max_length=30, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('boot_l', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='laminator_boot_pr_rp', to='production.laminatorboot')),
                ('boot_p', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='printer_boot_pr_rp', to='production.printerboot')),
                ('production_operator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='production_operator_pr_rp', to='essays.productionoperator')),
                ('quality_analist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='quality_analist_pr_rp', to='essays.qualityanalyst')),
            ],
            options={
                'verbose_name': 'Reporte de Control de Calidad',
                'verbose_name_plural': 'Reportes de Control de Calidad',
                'permissions': [('boss_sign_testfile_pr', 'Puede firmar un reporte de producción cómo revisado por jefe'), ('supv_sign_testfile_pr', 'Puede firmar un reporte cómo revisado por supervisor'), ('idat_sign_testfile_pr', 'Puede firmar un reporte de producción cómo revisado por IDAT')],
            },
        ),
        migrations.CreateModel(
            name='TestFileEssay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('essay', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='essay_pr_rp', to='home.essay')),
                ('test_file', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='production_report', to='production.testfile')),
            ],
            options={
                'verbose_name': 'Ensayos de Reporte de Control de Calidad',
                'verbose_name_plural': 'Ensayos de Reportes de Control de Calidad',
            },
        ),
        migrations.CreateModel(
            name='TestFileEssayResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result_t', models.CharField(blank=True, max_length=100, null=True)),
                ('result_a', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('check_a', models.BooleanField(blank=True, default=False)),
                ('result_b', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('check_b', models.BooleanField(blank=True, default=False)),
                ('result_c', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('check_c', models.BooleanField(blank=True, default=False)),
                ('result_p', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('check_p', models.BooleanField(blank=True, default=False)),
                ('bobbin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bobbin_pr', to='production.bobbin')),
                ('essay', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='test_file_essay_pr', to='production.testfileessay')),
            ],
            options={
                'verbose_name': 'Resultados de ensayos de Reporte de Control de Calidad OP',
                'verbose_name_plural': 'Resultados de ensayos de Reportes de Control de Calidad OP',
            },
        ),
        migrations.CreateModel(
            name='TechnicalSpecs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(null=True)),
                ('observation', django_quill.fields.QuillField(blank=True, null=True)),
                ('boss', models.CharField(blank=True, max_length=30, null=True)),
                ('production_order', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='production.order')),
                ('quality_analist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='quality_analist_pr_ts', to='essays.qualityanalyst')),
            ],
        ),
        migrations.AddField(
            model_name='laminatorboot',
            name='production_order',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='production.order'),
        ),
        migrations.AddField(
            model_name='laminatorboot',
            name='quality_analist',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='quality_analist_pr_lm', to='essays.qualityanalyst'),
        ),
        migrations.CreateModel(
            name='LaminationEssay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result_t', models.CharField(blank=True, max_length=100, null=True)),
                ('result_a', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('check_a', models.BooleanField(blank=True, default=False)),
                ('result_b', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('check_b', models.BooleanField(blank=True, default=False)),
                ('result_c', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('check_c', models.BooleanField(blank=True, default=False)),
                ('result_p', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('check_p', models.BooleanField(blank=True, default=False)),
                ('essay', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='essay_pr', to='home.essay')),
                ('laminator_boot', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='laminator_boot_pr', to='production.laminatorboot')),
            ],
            options={
                'verbose_name': 'Análisis de Arranque de laminacion',
                'verbose_name_plural': 'Análisis de Arranques de laminacion',
            },
        ),
        migrations.CreateModel(
            name='HistoricalTestFileEssay',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('essay', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='home.essay')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('test_file', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='production.testfile')),
            ],
            options={
                'verbose_name': 'historical Ensayos de Reporte de Control de Calidad',
                'verbose_name_plural': 'historical Ensayos de Reportes de Control de Calidad',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTestFile',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('type', models.CharField(choices=[('prt', 'prt'), ('lam', 'lam')], max_length=3, null=True)),
                ('turn', models.CharField(choices=[('I', 'I'), ('II', 'II'), ('III', 'III')], max_length=3, null=True)),
                ('date', models.DateField(null=True)),
                ('observation', django_quill.fields.QuillField(blank=True, null=True)),
                ('supervisor', models.CharField(blank=True, max_length=30, null=True)),
                ('boss', models.CharField(blank=True, max_length=30, null=True)),
                ('idat', models.CharField(blank=True, max_length=30, null=True)),
                ('date_created', models.DateTimeField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('boot_l', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='production.laminatorboot')),
                ('boot_p', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='production.printerboot')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('production_operator', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='essays.productionoperator')),
                ('quality_analist', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='essays.qualityanalyst')),
            ],
            options={
                'verbose_name': 'historical Reporte de Control de Calidad',
                'verbose_name_plural': 'historical Reportes de Control de Calidad',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTechnicalSpecs',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('date', models.DateField(null=True)),
                ('observation', django_quill.fields.QuillField(blank=True, null=True)),
                ('boss', models.CharField(blank=True, max_length=30, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('production_order', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='production.order')),
                ('quality_analist', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='essays.qualityanalyst')),
            ],
            options={
                'verbose_name': 'historical technical specs',
                'verbose_name_plural': 'historical technical specss',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPrinterBoot',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('origin', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('date_time', models.DateTimeField(null=True)),
                ('turn', models.CharField(choices=[('I', 'I'), ('II', 'II'), ('III', 'III')], max_length=3, null=True)),
                ('machine_speed', models.FloatField(null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('check_crown_treatment', models.BooleanField(default=False)),
                ('s_index', models.IntegerField(default=0)),
                ('provider', models.CharField(blank=True, max_length=100, null=True)),
                ('sustrate_width', models.IntegerField(blank=True, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message=None)])),
                ('crown_treatment_side', models.CharField(blank=True, choices=[('e', 'Externa'), ('i', 'Interna')], max_length=1, null=True)),
                ('surface_tension', models.CharField(blank=True, choices=[('36', '36'), ('38', '38'), ('40', '40'), ('42', '42'), ('44', '44'), ('46', '46')], max_length=2, null=True)),
                ('sta_01', models.CharField(default='-', max_length=20)),
                ('sta_02', models.CharField(default='-', max_length=20)),
                ('sta_03', models.CharField(default='-', max_length=20)),
                ('sta_04', models.CharField(default='-', max_length=20)),
                ('sta_05', models.CharField(default='-', max_length=20)),
                ('sta_06', models.CharField(default='-', max_length=20)),
                ('sta_07', models.CharField(default='-', max_length=20)),
                ('sta_08', models.CharField(default='-', max_length=20)),
                ('sta_09', models.CharField(default='-', max_length=20)),
                ('sta_10', models.CharField(default='-', max_length=20)),
                ('standar', models.CharField(choices=[('Si', 'Si'), ('No', 'No'), ('NA', 'No Aplica')], default='NA', max_length=2)),
                ('art', models.CharField(choices=[('Si', 'Si'), ('No', 'No'), ('NA', 'No Aplica')], default='NA', max_length=2)),
                ('pre_print', models.CharField(choices=[('Si', 'Si'), ('No', 'No'), ('NA', 'No Aplica')], default='NA', max_length=2)),
                ('develop_folder', models.CharField(choices=[('Si', 'Si'), ('No', 'No'), ('NA', 'No Aplica')], default='NA', max_length=2)),
                ('register', models.CharField(choices=[('na', 'No aplica'), ('ac', 'Aceptado'), ('de', 'Deficiente'), ('ad', 'Aceptado con desviación')], max_length=2, null=True)),
                ('text', models.CharField(choices=[('na', 'No aplica'), ('ac', 'Aceptado'), ('de', 'Deficiente'), ('ad', 'Aceptado con desviación')], max_length=2, null=True)),
                ('dimensions', models.CharField(choices=[('na', 'No aplica'), ('ac', 'Aceptado'), ('de', 'Deficiente'), ('ad', 'Aceptado con desviación')], max_length=2, null=True)),
                ('cutting_guide', models.CharField(choices=[('na', 'No aplica'), ('ac', 'Aceptado'), ('de', 'Deficiente'), ('ad', 'Aceptado con desviación')], max_length=2, null=True)),
                ('photocell', models.CharField(choices=[('na', 'No aplica'), ('ac', 'Aceptado'), ('de', 'Deficiente'), ('ad', 'Aceptado con desviación')], max_length=2, null=True)),
                ('barcode', models.CharField(choices=[('na', 'No aplica'), ('ac', 'Aceptado'), ('de', 'Deficiente'), ('ad', 'Aceptado con desviación')], max_length=2, null=True)),
                ('develop', models.CharField(blank=True, max_length=30, null=True)),
                ('develop_unit', models.CharField(blank=True, choices=[('mm', 'mm'), ('cm', 'cm'), ('in', 'in')], max_length=3, null=True)),
                ('develop_result', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('cut_width_result', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('design', models.CharField(blank=True, max_length=30, null=True)),
                ('machine_winding', models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8')], max_length=1, null=True)),
                ('winding_description', models.CharField(blank=True, max_length=100, null=True)),
                ('r_left', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('r_right', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('r_center', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('r_average', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('color_standar', models.CharField(choices=[('No Aplica', 'No aplica'), ('Claro', 'Claro'), ('Estándar', 'Estándar'), ('Oscuro', 'Oscuro')], max_length=10, null=True)),
                ('anchorage', models.CharField(choices=[('ac', 'Aceptado'), ('de', 'Deficiente')], max_length=2, null=True)),
                ('rub', models.CharField(choices=[('ac', 'Aceptado'), ('de', 'Deficiente')], max_length=2, null=True)),
                ('ther_resistance', models.CharField(choices=[('na', 'No aplica'), ('ac', 'Aceptado'), ('de', 'Deficiente')], max_length=2, null=True)),
                ('anchorage_resistance', models.CharField(choices=[('na', 'No aplica'), ('ac', 'Aceptado'), ('de', 'Deficiente')], max_length=2, null=True)),
                ('cut_diagram', models.BooleanField(default=False)),
                ('observation', django_quill.fields.QuillField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('printer', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='essays.printer')),
                ('production_operator', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='essays.productionoperator')),
                ('production_order', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='production.order')),
                ('quality_analist', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='essays.qualityanalyst')),
            ],
            options={
                'verbose_name': 'historical Arranque de impresora',
                'verbose_name_plural': 'historical Arranques de impresoras',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLaminatorBoot',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('origin', models.CharField(blank=True, default=None, max_length=15, null=True)),
                ('date_time', models.DateTimeField(null=True)),
                ('turn', models.CharField(choices=[('I', 'I'), ('II', 'II'), ('III', 'III')], max_length=3, null=True)),
                ('machine_speed', models.FloatField(null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('check_crown_treatment', models.BooleanField(default=False)),
                ('step', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4')], max_length=1, null=True)),
                ('st_1', models.CharField(max_length=25, null=True)),
                ('st_2', models.CharField(max_length=25, null=True)),
                ('st_3', models.CharField(blank=True, max_length=25, null=True)),
                ('st_4', models.CharField(blank=True, max_length=25, null=True)),
                ('batch', models.CharField(blank=True, max_length=20, null=True)),
                ('formula', models.CharField(blank=True, max_length=7, null=True)),
                ('time', models.CharField(blank=True, max_length=100, null=True)),
                ('temp', models.IntegerField(blank=True, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message=None)])),
                ('observation', django_quill.fields.QuillField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('adhesive', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='home.material')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('laminator', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='essays.laminator')),
                ('production_operator', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='essays.productionoperator')),
                ('production_order', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='production.order')),
                ('quality_analist', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='essays.qualityanalyst')),
            ],
            options={
                'verbose_name': 'historical Arranque de Laminadora',
                'verbose_name_plural': 'historical Arranques de Laminadora',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLaminationEssay',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('result_t', models.CharField(blank=True, max_length=100, null=True)),
                ('result_a', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('check_a', models.BooleanField(blank=True, default=False)),
                ('result_b', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('check_b', models.BooleanField(blank=True, default=False)),
                ('result_c', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('check_c', models.BooleanField(blank=True, default=False)),
                ('result_p', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('check_p', models.BooleanField(blank=True, default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('essay', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='home.essay')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('laminator_boot', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='production.laminatorboot')),
            ],
            options={
                'verbose_name': 'historical Análisis de Arranque de laminacion',
                'verbose_name_plural': 'historical Análisis de Arranques de laminacion',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCutterBoot',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('date_time', models.DateTimeField(null=True)),
                ('turn', models.CharField(choices=[('I', 'I'), ('II', 'II'), ('III', 'III')], max_length=3, null=True)),
                ('machine_speed', models.FloatField(null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('as_treatment', models.BooleanField(default=False)),
                ('r_a', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('r_b', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('r_c', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('r_p', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('w_a', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('w_b', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('w_c', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('w_p', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('apearence', models.CharField(choices=[('AC', 'Aceptado'), ('DE', 'Deficiente'), ('NA', 'No Aplica')], max_length=2, null=True)),
                ('apearence_observation', models.CharField(blank=True, max_length=100, null=True)),
                ('core', models.CharField(blank=True, choices=[('3', '3"'), ('6', '6"')], max_length=2, null=True)),
                ('exterior_dia_bobbin', models.CharField(blank=True, max_length=30, null=True)),
                ('exterior_dia_bobbin_unit', models.CharField(blank=True, choices=[('kg', 'kg'), ('mm', 'mm'), ('cm', 'cm'), ('m', 'm')], max_length=3, null=True)),
                ('exterior_dia', models.CharField(max_length=60, null=True)),
                ('print_spec', models.CharField(blank=True, max_length=60, null=True)),
                ('print', models.CharField(blank=True, max_length=60, null=True)),
                ('winding_position', models.CharField(blank=True, max_length=60, null=True)),
                ('dist_boder_cell_material', models.CharField(blank=True, max_length=30, null=True)),
                ('dist_boder_material', models.CharField(blank=True, max_length=60, null=True)),
                ('joint_color', models.CharField(blank=True, choices=[('Rojo', 'Rojo'), ('Negro', 'Negro'), ('Marrón', 'Marrón'), ('Transparente', 'Transparente')], max_length=60, null=True)),
                ('joint_color_observation', models.CharField(blank=True, max_length=100, null=True)),
                ('static_spec', models.CharField(blank=True, max_length=60, null=True)),
                ('static', models.CharField(blank=True, max_length=60, null=True)),
                ('packaging_spec', models.CharField(blank=True, max_length=60, null=True)),
                ('packaging', models.CharField(blank=True, max_length=60, null=True)),
                ('pallet_spec', models.CharField(blank=True, max_length=60, null=True)),
                ('pallet', models.CharField(blank=True, max_length=60, null=True)),
                ('n_litters_spec', models.CharField(blank=True, max_length=60, null=True)),
                ('n_litters', models.CharField(blank=True, max_length=60, null=True)),
                ('identification', models.CharField(blank=True, max_length=50, null=True)),
                ('ex_tag', models.BooleanField(default=False)),
                ('in_tag', models.BooleanField(default=False)),
                ('observation', django_quill.fields.QuillField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('machine', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='essays.cutter')),
                ('production_operator', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='essays.productionoperator')),
                ('production_order', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='production.order')),
                ('quality_analist', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='essays.qualityanalyst')),
                ('rewinder', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='essays.rewinder')),
            ],
            options={
                'verbose_name': 'historical Arranque de cortadora',
                'verbose_name_plural': 'historical Arranques de cortadoras',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Dispatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('f_date', models.DateField(null=True)),
                ('e_date', models.DateField(null=True)),
                ('batch_number', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(999999999)])),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(99999999999)])),
                ('technical_specs', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='production.technicalspecs')),
            ],
            options={
                'verbose_name': 'Despacho',
                'verbose_name_plural': 'Despachos',
            },
        ),
        migrations.CreateModel(
            name='CutterBoot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_time', models.DateTimeField(null=True)),
                ('turn', models.CharField(choices=[('I', 'I'), ('II', 'II'), ('III', 'III')], max_length=3, null=True)),
                ('machine_speed', models.FloatField(null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('as_treatment', models.BooleanField(default=False)),
                ('r_a', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('r_b', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('r_c', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('r_p', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('w_a', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('w_b', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('w_c', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('w_p', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(9999.0)])),
                ('apearence', models.CharField(choices=[('AC', 'Aceptado'), ('DE', 'Deficiente'), ('NA', 'No Aplica')], max_length=2, null=True)),
                ('apearence_observation', models.CharField(blank=True, max_length=100, null=True)),
                ('core', models.CharField(blank=True, choices=[('3', '3"'), ('6', '6"')], max_length=2, null=True)),
                ('exterior_dia_bobbin', models.CharField(blank=True, max_length=30, null=True)),
                ('exterior_dia_bobbin_unit', models.CharField(blank=True, choices=[('kg', 'kg'), ('mm', 'mm'), ('cm', 'cm'), ('m', 'm')], max_length=3, null=True)),
                ('exterior_dia', models.CharField(max_length=60, null=True)),
                ('print_spec', models.CharField(blank=True, max_length=60, null=True)),
                ('print', models.CharField(blank=True, max_length=60, null=True)),
                ('winding_position', models.CharField(blank=True, max_length=60, null=True)),
                ('dist_boder_cell_material', models.CharField(blank=True, max_length=30, null=True)),
                ('dist_boder_material', models.CharField(blank=True, max_length=60, null=True)),
                ('joint_color', models.CharField(blank=True, choices=[('Rojo', 'Rojo'), ('Negro', 'Negro'), ('Marrón', 'Marrón'), ('Transparente', 'Transparente')], max_length=60, null=True)),
                ('joint_color_observation', models.CharField(blank=True, max_length=100, null=True)),
                ('static_spec', models.CharField(blank=True, max_length=60, null=True)),
                ('static', models.CharField(blank=True, max_length=60, null=True)),
                ('packaging_spec', models.CharField(blank=True, max_length=60, null=True)),
                ('packaging', models.CharField(blank=True, max_length=60, null=True)),
                ('pallet_spec', models.CharField(blank=True, max_length=60, null=True)),
                ('pallet', models.CharField(blank=True, max_length=60, null=True)),
                ('n_litters_spec', models.CharField(blank=True, max_length=60, null=True)),
                ('n_litters', models.CharField(blank=True, max_length=60, null=True)),
                ('identification', models.CharField(blank=True, max_length=50, null=True)),
                ('ex_tag', models.BooleanField(default=False)),
                ('in_tag', models.BooleanField(default=False)),
                ('observation', django_quill.fields.QuillField(blank=True, null=True)),
                ('machine', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='machine_pr', to='essays.cutter')),
                ('production_operator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='quality_analist_pr_ct', to='essays.productionoperator')),
                ('production_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='production.order')),
                ('quality_analist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='quality_analist_pr_ct', to='essays.qualityanalyst')),
                ('rewinder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='rewinder_pr', to='essays.rewinder')),
            ],
            options={
                'verbose_name': 'Arranque de cortadora',
                'verbose_name_plural': 'Arranques de cortadoras',
            },
        ),
        migrations.AddField(
            model_name='bobbin',
            name='test_file',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='production.testfile'),
        ),
    ]
