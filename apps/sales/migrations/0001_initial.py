# Generated by Django 4.2.13 on 2024-06-05 18:34

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_quill.fields
import re
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('essays', '0001_initial'),
        ('home', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DeliveryAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=150, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.client')),
            ],
            options={
                'verbose_name': 'Dirección de Entrega',
                'verbose_name_plural': 'Direcciones de Entrega',
            },
        ),
        migrations.CreateModel(
            name='Representative',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message=None)])),
                ('name', models.CharField(max_length=20, null=True)),
            ],
            options={
                'verbose_name': 'Representate de Venta',
                'verbose_name_plural': 'Representates de Ventas',
            },
        ),
        migrations.CreateModel(
            name='SaleOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('request', models.IntegerField(blank=True, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message=None), django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(99999999)])),
                ('number', models.CharField(max_length=15, null=True)),
                ('request_date', models.DateField(null=True)),
                ('number_date', models.DateField(null=True)),
                ('origin', models.CharField(choices=[('pro', 'Producción'), ('upd', 'Cambio de Arte'), ('new', 'Nuevo Arte')], max_length=3, null=True)),
                ('bob_or_ream', models.CharField(blank=True, choices=[('Bobina', 'Bobina'), ('Resma', 'Resma')], max_length=10, null=True)),
                ('width_photo', models.IntegerField(blank=True, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message=None)])),
                ('lenght_photo', models.IntegerField(blank=True, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message=None)])),
                ('unit_photo', models.CharField(blank=True, choices=[('mm', 'mm'), ('cm', 'cm'), ('in', 'in')], max_length=3, null=True)),
                ('price', models.CharField(max_length=30, null=True)),
                ('quantity', models.IntegerField(null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message=None)])),
                ('unit', models.CharField(choices=[('kg', 'kg'), ('m', 'm'), ('m²', 'm²')], max_length=3, null=True)),
                ('tolerance', models.IntegerField(default=10, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message=None)])),
                ('observation', django_quill.fields.QuillField(blank=True, null=True)),
                ('approver', models.CharField(blank=True, max_length=50, null=True)),
                ('elaborator', models.CharField(blank=True, max_length=50, null=True)),
                ('archived', models.BooleanField(blank=True, default=False, null=True)),
                ('deleted', models.BooleanField(blank=True, default=False, null=True)),
                ('deleted_by', models.CharField(blank=True, max_length=30, null=True)),
                ('deleted_time', models.DateTimeField(blank=True, null=True)),
                ('delivery_address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='sales.deliveryaddress')),
                ('plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='home.plan')),
                ('printer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='essays.printer')),
                ('representative', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='sales.representative')),
            ],
            options={
                'verbose_name': 'Órden de Compra',
                'verbose_name_plural': 'Órdenes de Compra',
                'permissions': [('approve_purchsae_order', 'Puede firmar una orden de venta cómo aprobada'), ('review_purchsae_order', 'Puede firmar una orden de venta cómo revisada'), ('archive_purchsae_order', 'Puede archivar una orden de venta'), ('view_archive_purchsae_order', 'Puede ver el archivo orden de venta')],
            },
        ),
        migrations.CreateModel(
            name='HistoricalSaleOrder',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('reference_date', models.DateTimeField(blank=True, editable=False, null=True)),
                ('date_created', models.DateTimeField(blank=True, editable=False, null=True)),
                ('request', models.IntegerField(blank=True, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message=None), django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(99999999)])),
                ('number', models.CharField(max_length=15, null=True)),
                ('request_date', models.DateField(null=True)),
                ('number_date', models.DateField(null=True)),
                ('origin', models.CharField(choices=[('pro', 'Producción'), ('upd', 'Cambio de Arte'), ('new', 'Nuevo Arte')], max_length=3, null=True)),
                ('bob_or_ream', models.CharField(blank=True, choices=[('Bobina', 'Bobina'), ('Resma', 'Resma')], max_length=10, null=True)),
                ('width_photo', models.IntegerField(blank=True, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message=None)])),
                ('lenght_photo', models.IntegerField(blank=True, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message=None)])),
                ('unit_photo', models.CharField(blank=True, choices=[('mm', 'mm'), ('cm', 'cm'), ('in', 'in')], max_length=3, null=True)),
                ('price', models.CharField(max_length=30, null=True)),
                ('quantity', models.IntegerField(null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message=None)])),
                ('unit', models.CharField(choices=[('kg', 'kg'), ('m', 'm'), ('m²', 'm²')], max_length=3, null=True)),
                ('tolerance', models.IntegerField(default=10, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message=None)])),
                ('observation', django_quill.fields.QuillField(blank=True, null=True)),
                ('approver', models.CharField(blank=True, max_length=50, null=True)),
                ('elaborator', models.CharField(blank=True, max_length=50, null=True)),
                ('archived', models.BooleanField(blank=True, default=False, null=True)),
                ('deleted', models.BooleanField(blank=True, default=False, null=True)),
                ('deleted_by', models.CharField(blank=True, max_length=30, null=True)),
                ('deleted_time', models.DateTimeField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('delivery_address', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sales.deliveryaddress')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('plan', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='home.plan')),
                ('printer', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='essays.printer')),
                ('representative', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sales.representative')),
            ],
            options={
                'verbose_name': 'historical Órden de Compra',
                'verbose_name_plural': 'historical Órdenes de Compra',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRepresentative',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('number', models.IntegerField(null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message=None)])),
                ('name', models.CharField(max_length=20, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Representate de Venta',
                'verbose_name_plural': 'historical Representates de Ventas',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDeliveryDate',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('quantity', models.IntegerField(null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message=None)])),
                ('delivery_date', models.DateField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('sale_order', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sales.saleorder')),
            ],
            options={
                'verbose_name': 'historical Quiantity',
                'verbose_name_plural': 'historical Quiantities',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDeliveryAddress',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('address', models.CharField(max_length=150, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('client', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='home.client')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Dirección de Entrega',
                'verbose_name_plural': 'historical Direcciones de Entrega',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='DeliveryDate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message=None)])),
                ('delivery_date', models.DateField(null=True)),
                ('sale_order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sales.saleorder')),
            ],
            options={
                'verbose_name': 'Quiantity',
                'verbose_name_plural': 'Quiantities',
            },
        ),
    ]
